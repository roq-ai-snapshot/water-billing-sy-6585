generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String     @db.VarChar(255)
  description String?    @db.VarChar(255)
  image       String?    @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer    customer[]
}

model customer {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String          @db.Uuid
  company_id    String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  company       company         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  meter_reading meter_reading[]
  water_bill    water_bill[]
}

model meter_reading {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id  String       @db.Uuid
  encoder_id   String       @db.Uuid
  reading      Int
  reading_date DateTime     @db.Date
  created_at   DateTime     @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  customer     customer     @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user         @relation(fields: [encoder_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  water_bill   water_bill[]
}

model user {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String          @unique @db.VarChar(255)
  firstName     String?         @db.VarChar(255)
  lastName      String?         @db.VarChar(255)
  roq_user_id   String          @db.VarChar(255)
  tenant_id     String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  company       company[]
  customer      customer[]
  meter_reading meter_reading[]
  water_bill    water_bill[]
}

model water_bill {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id      String        @db.Uuid
  treasurer_id     String        @db.Uuid
  meter_reading_id String        @db.Uuid
  amount           Int
  billing_date     DateTime      @db.Date
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @db.Timestamp(6)
  customer         customer      @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  meter_reading    meter_reading @relation(fields: [meter_reading_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user          @relation(fields: [treasurer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
